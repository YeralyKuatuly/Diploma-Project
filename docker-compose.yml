services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:8000/api
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:123@db:5432/art_gallery_db
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DJANGO_DEBUG=True
      - SECRET_KEY=8f4d2a1c9e7b3f6a5d8c2b1e4f7a9d3c6b5e8a2f4d1c9b7e3a6f8d2c5b1e4a9
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost,http://localhost:80,http://127.0.0.1,http://127.0.0.1:80
      - CORS_ALLOW_CREDENTIALS=True
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=art_gallery_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 